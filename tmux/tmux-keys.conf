# keys
setw -g  xterm-keys  on
setw -g  mode-keys   vi
set  -g  status-keys "emacs"

# prefix
unbind C-b
set -sg escape-time 1
set -g  prefix C-a
bind C-a send-prefix

# user-keys
set  -s user-keys[0]   "\e[44;5u" # recognize C-, key
set  -s user-keys[1]   "\e[46;5u" # recognize C-. key
bind -n User0  send -l "\e[44;5u" # let C-, pass through unchanged
bind -n User1  send -l "\e[46;5u" # let C-. pass through unchanged

# mouse
set -g mouse on

# Check state of the pane in which scroll occurred. If capturing mouse input or in
# copy-mode, forward scroll event to the pane. Else, enter copy-mode.

bind -n WheelUpPane if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -et="'
bind -T copy-mode-vi C-WheelUpPane send -X halfpage-up
bind -T copy-mode-vi C-WheelDownPane send -X halfpage-down

# bindings
bind    u   choose-session
bind   C-u  choose-session
bind    R   refresh-client
bind    r   source-file -q /etc/tmux.conf \; source-file -q ~/.tmux.conf
unbind  q   # display-panes
bind    q   confirm-before -p "kill-session #S? (y/n)" kill-session
bind    K   send-keys -R C-l \; clear-history
bind    b   set -q status
bind   C-b  set -q status
bind    g   display-message
bind   C-n  next-window
bind   C-p  previous-window

# pane manipulation
unbind    s    # tree
bind      s    split-window -v
bind      v    split-window -h
bind     C-h   select-pane  -L
bind     C-j   select-pane  -D
bind     C-k   select-pane  -U
bind     C-l   select-pane  -R
unbind    m    # select-pane -m
bind      m    command-prompt -I "#W" "rename-window '%%'"
bind     C-m   command-prompt -I "#W" "rename-window '%%'"
bind      ,    if-shell -F '#{window_zoomed_flag}' 'select-pane -t :.+; resize-pane -Z' 'last-pane'
bind    User0  if-shell -F '#{window_zoomed_flag}' 'select-pane -t :.+; resize-pane -Z' 'last-pane'
bind -r   O    if-shell -F '#{window_zoomed_flag}' 'last-pane' 'select-pane -t :.+; resize-pane -Z'
bind -r   \    next-layout
bind -r  C-\   next-layout

# pane zoom
unbind    . # command-prompt "move-window -t '%%'"
bind      .    resize-pane -Z
bind    User1  resize-pane -Z # C-.

# copy mode
unbind  Space  # next-layout
bind  Space  copy-mode \; send-keys -X start-of-line
bind C-Space copy-mode \; send-keys -X start-of-line
bind   -T copy-mode-vi   v   send -X begin-selection
bind   -T copy-mode-vi Space send -X copy-pipe "xclip -in -selection clipboard" \; send -X clear-selection
bind   -T copy-mode-vi   y   send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
unbind -T copy-mode-vi  C-e  # scroll-down
bind   -T copy-mode-vi  C-e  send -X end-of-line
unbind -T copy-mode-vi  C-j  # copy-selection-and-cancel
bind   -T copy-mode-vi  C-j  send -X scroll-down
bind   -T copy-mode-vi  C-k  send -X scroll-up
bind   -T copy-mode-vi  C-a  send -X start-of-line

# Stay in copy mode on drag end, but otherwise exit for mouse up.
unbind -T copy-mode-vi MouseDragEnd1Pane
bind   -T copy-mode-vi MouseUp1Pane send -X cancel

bind -T copy-mode-vi DoubleClick1Pane select-pane \; \
                                      send -X select-word

bind -n              DoubleClick1Pane select-pane \; \
                                      copy-mode -M \; \
                                      send -X select-word

bind -T copy-mode-vi TripleClick1Pane select-pane \; \
                                      send -X select-line

bind -n              TripleClick1Pane select-pane \; \
                                      copy-mode -M \; \
                                      send -X select-line

# search
bind  /  copy-mode \; command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind C-_ copy-mode \; command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind -T copy-mode-vi / command-prompt -i -p "(search down)" "send -X search-forward-incremental \"%%%\""

# quick splits
unbind t # clock-mode
bind  t  split-window -h 'vtop -t certs || vtop -t wizard || htop || top'

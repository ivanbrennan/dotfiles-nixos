#!/bin/sh

# ::::::::: Colorscheme ::::::::::::::::::::::
{
  light() {
    terminal_colorscheme light
    export THEME=light
  }

  dark() {
    terminal_colorscheme dark
    export THEME=dark
  }

  terminal_colorscheme() {
    local theme=$1
    sed -i "s/\(^colors: \*\).*/\1${theme}/" ~/.config/alacritty/alacritty.yml
  }
}

# ::::::::: Keyboard :::::::::::::::::::::::::
{
  super_swap() {
    local old new swap

    old=$(gsettings get org.gnome.desktop.input-sources xkb-options)
    old="${old/#@as /}"  # remove type annotation

    swap="'altwin:swap_alt_win'"

    if grep -q "$swap" <<< "$old"; then
      new="${old//$swap}"      # remove swap
    else
      new="${old/%]/, $swap]}" # append swap
    fi

    new="${new/#[, /[}"  # remove leading comma
    new="${new/%, ]/]}"  # remove trailing comma
    new="${new//, ,/,}"  # remove embedded comma

    gsettings set org.gnome.desktop.input-sources xkb-options "$new"
  }
}

# ::::::::: Hints ::::::::::::::::::::::::::::
{
  showpath() {
    col_bold="\033[30;01m"
    col_reset="\033[39;49;00m"

    printf '%bPATH%b:\n%s\n' "$col_bold" "$col_reset" "${PATH//:/$'\n'}"
  }
}

# ::::::::: Documentation ::::::::::::::::::::
{
  # jump to Bash builtin documentation
  man () {
    case "$(type -t "$1")" in
      builtin)
        local pattern="^ *$1"

        if bashdoc_match "$pattern \+[-[]"; then
          command man bash | less --pattern="$pattern +[-[]"
        elif bashdoc_match "$pattern\b"; then
          command man bash | less --pattern="$pattern[[:>:]]"
        else
          command man bash
        fi
        ;;
      keyword)
        command man bash | less --hilite-search --pattern='^SHELL GRAMMAR$'
        ;;
      *)
        command man "$@"
        ;;
    esac
  }

  bashdoc_match() {
    command man bash | col -b | grep -l "$1" > /dev/null
  }

  # dictionary
  fdoc() {
    curl dict://dict.org/d:$1:foldoc
  }
}

#!/bin/sh

export DOTFILES="$HOME/Development/resources/dotfiles-nixos"
export GIT_EDITOR=vim

# ::::::::: Colors :::::::::::::::::::::::::::
{
  [ -f ~/.bash_colors.sh ] && . ~/.bash_colors.sh

  export THEME=light
}

# ::::::::: Prompt :::::::::::::::::::::::::::
{
  build_prompt() {
    export PS1="╭${BRIGHT_BLUE}\u${NORMAL}·${BRIGHT_BLUE}\W${NORMAL}\$(grb_git_prompt)${NORMAL}\n╰ဝ "
    export PS2=" ❯ "
    export PS4=" + "
  }

  grb_git_prompt() {
    if [ -n "$(__gitdir)" ]; then
      local color="$(git_branch_color)"

      # __git_ps1 inserts the current git branch where %s is
      echo " $(__git_ps1 "(${color}%s${NORMAL})")"
    fi
  }

  git_branch_color() {
    local minutes="$(minutes_since_last_commit)"

    if [ -n "$minutes" ]; then
      echo "$(minutes_color minutes)"
    elif [[ "$THEME" == 'dark' ]]; then
      echo $WHITE
    else
      echo $BLACK
    fi
  }

  minutes_since_last_commit() {
    local now=$(date +%s)
    local last_commit=$(git log --pretty=format:'%at' -1 2>/dev/null)

    if [ "$?" -eq 0 ]; then
      echo $(( (now - last_commit) / 60 ))
    fi
  }

  minutes_color() {
    if [ -z "$1" ]; then
      return
    elif [[ "$1" -gt 30 ]]; then
      echo "${RED}"
    elif [[  "$1" -gt 10  ]]; then
      echo "${YELLOW}"
    else
      echo "${GREEN}"
    fi
  }

  build_prompt
}

# ::::::::: Sources ::::::::::::::::::::::::::
{
  files=(~/.bashrc.local
         ~/.bash_aliases
         ~/.bash_functions)

  for file in "${files[@]}"; do
    [ -r "$file" ] && . "$file"
  done
}
